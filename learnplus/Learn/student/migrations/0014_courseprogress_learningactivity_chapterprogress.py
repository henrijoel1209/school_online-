# Generated by Django 5.1.4 on 2024-12-28 15:16

import datetime
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('school', '0015_auto_20241227_1851'),
        ('student', '0013_auto_20241228_1302'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='school.cours')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to='student.student')),
            ],
            options={
                'verbose_name': 'Progression du cours',
                'verbose_name_plural': 'Progressions des cours',
                'db_table': 'student_courseprogress',
                'ordering': ['-last_accessed'],
                'unique_together': {('student', 'course')},
            },
        ),
        migrations.CreateModel(
            name='LearningActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('course_start', 'Début du cours'), ('course_complete', 'Cours terminé'), ('chapter_start', 'Début du chapitre'), ('chapter_complete', 'Chapitre terminé'), ('quiz_start', 'Début du quiz'), ('quiz_complete', 'Quiz terminé'), ('assignment_submit', 'Devoir soumis'), ('grade_received', 'Note reçue')], max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField(blank=True, null=True)),
                ('status', models.BooleanField(default=True)),
                ('chapter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.chapitre')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.cours')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_activities', to='student.student')),
            ],
            options={
                'verbose_name': "Activité d'apprentissage",
                'verbose_name_plural': "Activités d'apprentissage",
                'db_table': 'student_learningactivity',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ChapterProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(default=False)),
                ('time_spent', models.DurationField(default=datetime.timedelta)),
                ('last_position', models.PositiveIntegerField(default=0)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('date_add', models.DateTimeField(auto_now_add=True)),
                ('date_update', models.DateTimeField(auto_now=True)),
                ('status', models.BooleanField(default=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.chapitre')),
                ('course_progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapter_progress', to='student.courseprogress')),
            ],
            options={
                'verbose_name': 'Progression du chapitre',
                'verbose_name_plural': 'Progressions des chapitres',
                'db_table': 'student_chapterprogress',
                'ordering': ['chapter__ordre'],
                'unique_together': {('course_progress', 'chapter')},
            },
        ),
    ]
